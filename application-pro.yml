server:
  port: 8081
  servlet:
    context-path: /smiling

#启用Swagger文档
knife4j:
  enable: true
springfox:
  documentation:
    swagger-ui:
      enabled:  true

spring:
  jackson:
    # 使用jackson进行json序列化时，可以将下划线的传参设置给驼峰的非简单对象成员上；并返回下划线格式的json串
    # 特别注意。使用这种方式的时候，要求不能有自定义的WebMvcConfigurationSupport，因为会覆盖默认的处理方式
    # 解决办法就是 拿到ObjectMapper的bean对象，手动塞入进去
    property-naming-strategy: SNAKE_CASE
  aop:
    proxy-target-class: true   #true为使用CGLIB代理
  datasource:
    url: jdbc:mysql://10.0.10.187:3306/graphdb2?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&zeroDateTimeBehavior=convertToNull&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5 #初始化大小
      min-idle: 5 #最小连接数
      max-active: 20  #最大连接数
      time-between-eviction-runs-millis: 60000  #配置间隔多久进行一次检测，检测需要关闭的空闲连接,单位毫秒
      min-evictable-idle-time-millis: 300000  #配置一个连接在池中最小生存的时间，单位毫秒
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,log4j  #配置监控统计拦截的filters，去掉后监控界面sql无法统计，wall用于防火墙
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #通过该属性打开mergeSQl功能：慢sql记录功能
      use-global-data-source-stat: true #合并多个DruidDataSource的监控数据
      max-wait: 60000 #配置获取连接等待超时时间

mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath*:/mapper/*.xml
  type-aliases-package: com.edu.moe.smiling.datasource.model
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
      logic-delete-field: del_state # 全局逻辑删除的实体字段名
      logic-delete-value: 1  # 逻辑已删除值
      logic-not-delete-value: 0  # 逻辑未删除值
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 返回map时true:当查询数据为空时字段返回为null,false:不加这个查询数据为空时，字段将被隐藏
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  config: ./logback-spring.xml


